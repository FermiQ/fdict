#:include 'fdict_common.fypp'

program tests

  use tst_utils

  implicit none

  type(variable_t) :: va
  real(real64) :: a, b(2), c(2,2)
  real(real64), pointer :: pa =>null(), pb(:)=>null(), pc(:,:)=>null()
  logical :: success

#:for sh, k, t, minr, maxr in ALL_SHORTS_KINDS_TYPES_RANKS
#:for ir in range(minr, maxr + 1)
 $:ptr_declare_define(t, sh, ir, 1)
#:endfor
#:endfor

  a      = 1.0_real64
  b(:)   = 2._real64
  c(:,:) = 3._real64

  ! do 'va = a'
  call assign(va,a)
  pr8_0 = transfer(va%enc,pr8_0)
  print '(a2,tr1,f4.2)',va%t,pr8_0%p
  ! associate pa with va 'pa => va'
  call associate(pa,va,success=success)
  if ( success ) then
    print *,'Success: ',pa
  end if
  if ( associatd(pa,va) ) then
    print *,'Associated: ',pa
  end if
  call associate(pb,va,success=success)
  if ( .not. success ) then
    print *,'Success, not associated'
  end if

  call assign(va,b)
  call assign(b,va)
  pr8_1 = transfer(va%enc,pr8_1)
  print '(a2,2(tr1,f4.2))',va%t,pr8_1%p

  call assign(va,c)
  pr8_2 = transfer(va%enc,pr8_2)
  print '(a2,4(tr1,f4.2))',va%t,pr8_2%p

  call assign(va,1)
  pi4_0 = transfer(va%enc,pi4_0)
  print '(a2,tr1,i0)',va%t,pi4_0%p

  call delete(va)

end program tests
